# -*- Mode: Makefile -*-

UV_RUN := uv run
PYTHON ?= python3.12

.git/hooks/pre-commit .git/hooks/pre-push: .venv
	@$(UV_RUN) pre-commit install
	@echo "pre-commit hooks installed!"
	@touch .git/hooks/pre-commit .git/hooks/pre-push

clean::	## Swab the decks! Does not touch docker images or volumes.
	@find $(ROOT_DIR) -name \*~ -exec rm '{}' +
	@find $(ROOT_DIR) -name \*.pyc -exec rm '{}' +
	@find $(ROOT_DIR) -name __pycache__ -prune -exec rm -fr '{}' +
	@find $(ROOT_DIR) -name .mypy_cache -prune -exec rm -fr '{}' +
	@rm -rf build bdist cover dist sdist distribute-* *.egg *.egg-info
	@rm -rf node_modules
	@rm -rf *.tar.gz junit.xml coverage.xml .cache
	@rm -rf .tox .eggs .blackened .isorted .ruff_cache
	@rm -rf venv* .venv
	@rm -rf ./app/staticfiles
	@rm -rf ./ssl/*.pem
	@find $(ROOT_DIR) \( -name \*.orig -o -name \*.bak -o -name \*.rej \) -exec rm '{}' +
	@mkdir -p .mypy_cache

$(ROOT_DIR)/.venv: pyproject.toml uv.lock
	@uv sync
	@touch $@

.venv:: $(ROOT_DIR)/.venv

# Squeegee vs lint targets. `lint` is pre-commit, so it does what you
# need done for the pre-commit hook to pass. Squeegee runs the various
# linting and formatting commands directly. It also runs mypy.
#
squeegee: .venv isort black mypy	## Manually run isort, black, mypy, and ruff over all project files
	@$(UV_RUN) ruff check $(ROOT_DIR)/app/

lint: .venv .git/hooks/pre-commit	## Run all pre-commit hooks. Note: this only runs over files in the git repo (and staged files)
	@$(UV_RUN) pre-commit run -a

PY_FILES=$(shell find $(ROOT_DIR)/app/ -type f -name '*.py' 2>/dev/null)
JS_FILES=$(shell find $(ROOT_DIR)/app/ -type f -name '*.js' 2>/dev/null)

.blackened: $(PY_FILES) .venv
	@$(UV_RUN) black $(ROOT_DIR)/app/
	@touch .blackened

.isorted: $(PY_FILES) .venv
	@$(UV_RUN) isort $(ROOT_DIR)/app/
	@touch .isorted

.prettier: $(JS_FILES)
	@npx prettier --write $(ROOT_DIR)/app
	@touch .prettier

formatting: isort black prettier	## Run `isort`, `black`, `prettier` over all files in project.
isort: .isorted
black: .blackened
prettier: .prettier

mypy: .venv  ## Run `mypy` over `app/`
	@$(UV_RUN) mypy --install-types --non-interactive --explicit-package-bases ./app/

.PHONY: formatting lint squeegee isort black mypy
