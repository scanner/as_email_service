[project]
name = "as-email-service"
version = "0.2.6"
description = "Apricot Systematic Email Service"
requires-python = ">=3.13"
dependencies = [
    "aiofiles",
    "aiologger",
    "aiosmtpd",
    "aiospamc",
    "crispy-bulma",
    "cryptography==42.0.8",
    "csscompressor",
    "django",
    "docopt",
    "django-anymail",
    "django-crispy-forms",
    "django-cryptography",
    "django-dry-rest-permissions",
    "django-environ",
    "django-extensions",
    "django-filter",
    "django-guardian",
    "django-ordered-model",
    "django-passkeys",
    "django-settings-export",
    "django-simple-bulma==2.6.0",
    "django-compressor",
    "djangorestframework",
    "dnspython",
    "drf-nested-routers",
    "gunicorn",
    "httpx",
    "huey",
    "influxdb-client",
    "postmarker",
    "proxy-protocol",
    "pyOpenSSL",
    "pydantic",
    "pydnsbl",
    "python-dotenv",
    "pytz",
    "pyyaml",
    "redis[hiredis]",
    "rich",
    "sentry-sdk[django]",
    "uvicorn",
    "wait-for-it",
    "whitenoise",
]

[dependency-groups]
dev = [
    # Testing
    "coverage",
    "dirty-equals",
    "fakeredis",
    "ipython",
    "pytest",
    "pytest-asyncio",
    "pytest-coverage",
    "pytest-django",
    "pytest-factoryboy",
    "pytest-mock",
    "pytest-sugar",
    "pytest-timeout",
    "pytest-xdist",
    "requests-mock",
    "trustme",
    "werkzeug",
    # Linting and formatting
    "autopep8",
    "black",
    "django-stubs[compatible-mypy]",
    "flake8",
    "isort",
    "mypy",
    "pre-commit",
    "ruff",
    "types-aiofiles",
    "types-cachetools",
    "types-pytz",
    "types-redis",
    "types-requests",
    "types-setuptools",
    "yapf",
    "django-test-migrations>=1.5.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.black]
line-length = 80
exclude = '''
(
  /(
      \.tox
    | .+/migrations
    | venv.*
    | \.venv
    | \.pre-commit-cache
  )/
)
'''

[tool.isort]
atomic = true
combine_as_imports = true
profile = "black"
line_length = 80
skip_gitignore = true
filter_files = true
skip_glob = ["*venv*","*/migrations/*",".*cache"]
known_first_party = ["as_email"]

[tool.ruff]
line-length = 80
exclude = [
    'migrations/.+\.py$',
]
ignore = [
       "E501",   # Ignore lines that are too long
]

[tool.mypy]
mypy_path = "./app"
exclude = [
    '__pycache__',
    '^\.mnt',
    '.*[-_]cache',
    '\.git',
    'venv*',
    'tmp',
    'fixtures',
    'deployment',
    'docs',
    'requirements',
    'migrations'
]
plugins = ["mypy_django_plugin.main"]
strict_optional = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings"
python_files = ["test_*.py", "*_test.py"]
asyncio_default_fixture_loop_scope = "function"
markers = [
    "smoke: marks tests as smoke (deselect with '-m \"not smoke\"')",
    "integration",
]
# Show slowest 10 tests
addopts = "--durations=10 --durations-min=0.1"
