# Generated by Django 4.2.3 on 2023-07-26 06:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Provider",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Server",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "domain_name",
                    models.CharField(
                        help_text="This is the 'server' within postmark to handle email for the specified domain.",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "incoming_spool_dir",
                    models.CharField(
                        help_text="The directory incoming messages are temporarily spooled to before being delivered. If not set a reasonable default will be chosen (this is the recommended way).",
                        max_length=1024,
                        null=True,
                    ),
                ),
                (
                    "outgoing_spool_dir",
                    models.CharField(
                        help_text="The directory outgoing messages are temporarily spooled to before being sent to the server for delivery. If not set a reasonable default will be chosen (this is the recommended way).",
                        max_length=1024,
                        null=True,
                    ),
                ),
                (
                    "mail_dir_parent",
                    models.CharField(
                        help_text="The directory that is the root of all the local mailboxes that mail will be delivered to if being delivered locally. The mailboxes are named by the email address being delivered to.If not set a reasonable default will be chosen (this is the recommended way).",
                        max_length=1024,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="as_email.provider",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmailAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email_address",
                    models.EmailField(
                        help_text="The email address that will receive emails on this server, and the address that will be used as a login to send emails. It must have the same domin name as the associated server",
                        max_length=254,
                        unique=True,
                    ),
                ),
                (
                    "account_type",
                    models.CharField(
                        choices=[
                            ("AC", "Account"),
                            ("AL", "Alias"),
                            ("FW", "Forwarding"),
                        ],
                        default="AC",
                        max_length=2,
                    ),
                ),
                ("mail_dir", models.CharField(max_length=1000)),
                (
                    "password",
                    models.CharField(
                        default="XXX",
                        help_text="Password for SMTP and IMAP auth for this account",
                        max_length=200,
                    ),
                ),
                (
                    "handle_blocked_messages",
                    models.CharField(
                        choices=[("BL", "Block"), ("DE", "Deliver")],
                        default="DE",
                        max_length=2,
                    ),
                ),
                (
                    "blocked_messages_delivery_folder",
                    models.CharField(
                        default="Junk",
                        help_text="If `blocked_messages` is set to `Deliver` then this is the mail folder that they are delivered to.",
                        max_length=1024,
                    ),
                ),
                (
                    "forward_to",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("deactivated", models.BooleanField(default=False)),
                ("num_bounces", models.IntegerField(default=0)),
                (
                    "deactivated_reason",
                    models.TextField(
                        blank=True,
                        help_text="Reason for the account being deactivated",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "alias_for",
                    models.ManyToManyField(
                        related_name="aliases",
                        related_query_name="alias",
                        to="as_email.emailaccount",
                    ),
                ),
                (
                    "server",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="as_email.server",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BlockedMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message_id", models.IntegerField(unique=True)),
                ("status", models.CharField(max_length=32)),
                ("from_address", models.EmailField(max_length=256)),
                ("subject", models.CharField(blank=True, max_length=1024)),
                ("cc", models.CharField(blank=True, max_length=1024)),
                (
                    "blocked_reason",
                    models.TextField(blank=True, max_length=1024),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "email_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="as_email.emailaccount",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MessageFilterRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        db_index=True, editable=False, verbose_name="order"
                    ),
                ),
                (
                    "header",
                    models.CharField(
                        choices=[
                            ("addr", "addr"),
                            ("*", "*"),
                            ("bcc", "bcc"),
                            ("cc", "cc"),
                            ("default", "default"),
                            ("from", "from"),
                            ("reply-to", "reply-to"),
                            ("source", "source"),
                            ("subject", "subject"),
                            ("to", "to"),
                        ],
                        default="default",
                        max_length=32,
                    ),
                ),
                ("pattern", models.CharField(blank=True, max_length=256)),
                (
                    "action",
                    models.CharField(
                        choices=[("folder", "folder"), ("destroy", "destroy")],
                        default="folder",
                        max_length=10,
                    ),
                ),
                ("destination", models.CharField(blank=True, max_length=1024)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "email_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="as_email.emailaccount",
                    ),
                ),
            ],
            options={
                "ordering": ("email_account", "order"),
                "indexes": [
                    models.Index(
                        fields=["email_account"],
                        name="as_email_me_email_a_202230_idx",
                    )
                ],
                "unique_together": {("email_account", "header", "pattern")},
            },
        ),
        migrations.AddIndex(
            model_name="emailaccount",
            index=models.Index(
                fields=["forward_to"], name="as_email_em_forward_136d4b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emailaccount",
            index=models.Index(
                fields=["email_address"], name="as_email_em_email_a_7ad406_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emailaccount",
            index=models.Index(
                fields=["user"], name="as_email_em_user_id_0589fd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="blockedmessage",
            index=models.Index(
                fields=["email_account"], name="as_email_bl_email_a_acaf05_idx"
            ),
        ),
    ]
