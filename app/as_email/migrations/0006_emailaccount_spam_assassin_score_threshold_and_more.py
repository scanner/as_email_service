# Generated by Django 4.2.5 on 2023-09-18 19:01

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):
    dependencies = [
        ("as_email", "0005_alter_emailaccount_account_type"),
    ]

    operations = [
        migrations.AddField(
            model_name="emailaccount",
            name="spam_assassin_score_threshold",
            field=models.IntegerField(
                default=15,
                help_text="If you select automatic spam filing for delivered email this isthe SpamAssassin X-Spam-Score value used. If the X-Spam-Score is over this value then the email will be delivered to the blocked message delivery folder (instead of the default `inbox`). Set this to 0 if you basically want no automatic spam filtering.",
            ),
        ),
        migrations.AddField(
            model_name="server",
            name="last_blocked_message_run",
            field=models.DateTimeField(
                auto_now_add=True,
                default=django.utils.timezone.now,
                help_text="When we scan the server for blocked messages we only care about blocked messages that have arrived after our last scan for blocked messages. This is the field used to keep track of that.",
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="emailaccount",
            name="num_bounces",
            field=models.IntegerField(
                default=0,
                help_text="Every time this email account sends an email and it results in a bounce this counter will increment. The mail provider does not allow excessive bounced email and this is a check to make sure that does not happen. An asynchronous task will go through all accounts that have a non-zero number of bounces and reduce them by 1 once a day. If you have more than the limit your account will be deactivated until it goes under the limit.",
            ),
        ),
    ]
